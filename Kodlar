library(ggplot2)
library(dplyr)
library(gridExtra)
library(ggthemes)
library(RColorBrewer)
library(grid)
library(gridExtra)
library(ggrepel)
library(viridis)
library(circlize)


circuits <- read.csv("circuits.csv")
constructor_results <- read.csv("constructor_results.csv")
constructor_standings <- read.csv("constructor_standings.csv")
constructors <- read.csv("constructors.csv")
driver_standings <- read.csv("driver_standings.csv")
drivers <- read.csv("drivers.csv")
lap_times <- read.csv("lap_times.csv")
pit_stops <- read.csv("pit_stops.csv")
qualifying <- read.csv("qualifying.csv")
races <- read.csv("races.csv")
results <- read.csv("results.csv")
seasons <- read.csv("seasons.csv")
sprint_results <- read.csv("sprint_results.csv")
status <- read.csv("status.csv")


#result2 oluşturma
results<-read.csv('results.csv',sep=',',stringsAsFactors=F)
results$fastestLapSpeed<-as.numeric(results$fastestLapSpeed)
convertFastestLap<-function(x){
  if(length(x)>0){
    curMinute<-as.numeric(strsplit(x,":")[[1]][1])
    curSecond<-as.numeric(strsplit(strsplit(x,":")[[1]][2],"\\.")[[1]][1])
    return(curMinute*60 + curSecond)
  }
  else if(length(x)==0){
    return(NA)
  }
}
results$fastestLapTimeNum<-sapply(results$fastestLapTime, convertFastestLap)
races<-read.csv('races.csv',stringsAsFactors=F,sep=',')
#convert character to Date
races$date<-as.Date(races$date,"%Y-%m-%d")
#remove "Grand Prix" in the name
races$name<-gsub(" Grand Prix","",races$name)
results_2<-left_join(
  results %>% dplyr::select(-time, -fastestLapTime), 
  races %>% dplyr::select(-time, -url), 
  by='raceId')
circuits<-read.csv("circuits.csv",sep=",",stringsAsFactors=F)
races<-left_join(races %>% select(-name,-url), circuits %>% select(-url), by='circuitId')



#1.Grafik
results_2 %>%
  filter(year >= 2006) %>%
  group_by(name, year) %>%
  summarize(medianFastestLapSpeed = median(fastestLapSpeed, na.rm = TRUE)) %>%
  ggplot(aes(x = factor(year), y = medianFastestLapSpeed, color = medianFastestLapSpeed)) +
  geom_point() +
  theme_bw() + 
  scale_color_gradientn(name = "", colours = rev(viridis::viridis(20))) +
  theme(
    axis.text.x = element_text(size = 8, angle = 90, hjust = 1),
    axis.text.y = element_text(size = 8), 
    strip.text.x = element_text(size = 8),
    plot.subtitle = element_text(hjust = 1, vjust = -217),  
    axis.title.y = element_blank(),  
    axis.title.x = element_blank()   
  ) +
  facet_wrap(~name, ncol = 6, scales = "free_x") +
  labs(
    title = 'Pıstlere Gore En Yuksek Hızlar',
    subtitle = 'Mil/Saat cinsinden hesaplanmıştır',
  ) +
  guides(color = FALSE)



#2.Grafik
results_2 %>% 
  dplyr::filter(year > 2005) %>% 
  dplyr::group_by(name, year) %>% 
  summarize(medianFastestLapTimeNum = median(fastestLapTimeNum, na.rm = TRUE)) %>% 
  ggplot(aes(x = factor(year), y = medianFastestLapTimeNum, color = medianFastestLapTimeNum)) +
  geom_boxplot(alpha = 0.25) +
  theme_fivethirtyeight() +
  geom_jitter(shape = 16, position = position_jitter(0.2), size = 3.5) +
  geom_smooth(method = 'loess', aes(group = 1), color = 'red', lty = 2, size = 0.5) +
  scale_color_gradientn(name = "", colours = rev(viridis::viridis(20))) +
  labs(
    title = 'Sezon Başına Tur Surelerinin Ortalamaları',
    subtitle = 'Saniye cınsınden, bir sezona gore gruplandırılmıştır'
  ) +
  guides(color = FALSE) +
  theme(
    axis.text.x = element_text(size = 16),  
    axis.text.y = element_text(size = 16),  
    plot.subtitle = element_text(hjust = 1, vjust = 1)  
  )



#3.Grafik
results_2 %>%
  filter(year >= 2006) %>%
  group_by(name, year) %>%
  summarize(medianFastestLapSpeed = median(fastestLapSpeed, na.rm = TRUE)) %>%
  ggplot(aes(x = factor(year), y = medianFastestLapSpeed, color = medianFastestLapSpeed)) +
  geom_boxplot(alpha = 0.25) +
  theme_fivethirtyeight() +
  geom_smooth(method = 'loess', aes(group = 1), color = 'red', lty = 2, size = 0.5) +
  scale_color_gradientn(name = "", colours = rev(viridis::viridis(20))) +
  labs(
    title = 'Yıllara Gore Hız Ortalamaları',
    subtitle = 'Mil/Saat cinsinden hesaplanmıştır'
  ) +
  guides(color = FALSE) +
  theme(
    plot.subtitle = element_text(hjust = 1, vjust = 1),  
    axis.text.x = element_text(size = 16),  
    axis.text.y = element_text(size = 16)   
  )



#result3 oluşturma

drivers<-read.csv('drivers.csv',sep=',',stringsAsFactors=F)
drivers$age_driver <- 2017 - sapply(drivers$dob, function(x) as.numeric(strsplit(x,'/')[[1]][3]))
driversStandings<-read.csv('driver_standings.csv',sep=',',stringsAsFactors=F)
drivers<-left_join(drivers %>% select(-url), driversStandings,by='driverId')

results_3<-left_join(
  results, 
  drivers %>% dplyr::rename(number_drivers = number) %>% select(-points, -position, -positionText),
  by=c('driverId','raceId')) 

results_3<-left_join(results_3,races %>% select(-time), by='raceId')

temp<-(results_3 %>% filter(position==1) %>% group_by(driverRef) %>% summarize(count=n()) %>% arrange(-count) %>% top_n(10))$driverRef
results_3$top10<-ifelse(results_3$driverRef %in% temp,results_3$driverRef,'other')




#4.Grafik
filtered_results <- results_3 %>%
  filter(position == 1, !is.na(top10), top10 != "other") %>%
  group_by(top10, year) %>%
  summarize(count = n())

ggplot(filtered_results, aes(x = factor(year), y = count, fill = top10)) +
  geom_bar(position = "fill", stat = "identity") +
  theme_minimal() +  
  theme(legend.position = 'bottom',
        axis.text.x = element_text(size = 14, angle = 90, hjust = 1),  
        axis.text.y = element_text(size = 14)) +  
  scale_fill_brewer(name = "", palette = 'Paired') +
  guides(fill = guide_legend(ncol = 25)) +
  labs(title = 'Rekabet Ve Dominasyonun Yıllara Gore Gorsellestirilmesi',
       subtitle = '1962-2023')




#5.Grafik
results <- read.csv("results.csv")
drivers <- read.csv("drivers.csv")
constructors <- read.csv("constructors.csv")


merged_data <- results %>% 
  left_join(drivers, by = "driverId") %>%
  left_join(constructors, by = "constructorId")


top_winners <- merged_data %>% 
  filter(positionOrder == 1) %>%
  group_by(driverId, forename, surname, name) %>%
  summarise(total_wins = n()) %>%
  arrange(desc(total_wins)) %>%
  head(10) 


ggplot(top_winners, aes(x = reorder(paste(forename, surname), -total_wins), y = total_wins, fill = name, label = total_wins)) +
  geom_bar(stat = "identity") +
  geom_text(position = position_stack(vjust = 0.5), size = 3) +
  labs(title = "En Cok Yarıs Kazanan 10 Pilot",
       x = "Pilotlar",
       y = "Toplam Kazanılan Yarış Sayısı",
       fill = "Takımlar") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 1),
        plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
        axis.title = element_text(size = 16),
        axis.text = element_text(size = 12),
        legend.position = "top") +
  
  coord_flip()




